---
// Missing remove the default values form input fields
---
<body>
  <main>
    <h1>Register</h1>
    <form action="api/register.json" method="post" id="registerForm">
      <label for="name">Name</label>
      <input
        type="text"
        name="name"
        placeholder="Name"
        value="Admin"
        required
      />
      <label for="email">Email</label>
      <input
        type="email"
        name="email"
        placeholder="Email"
        value="admin@test.com"
        required
      />
      <label for="password">Password</label>
      <input
        type="password"
        name="password"
        placeholder="Password"
        value="admin@test.com"
        required
      />
      <label for="confirmPassword">Confirm Password</label>
      <input
        type="password"
        placeholder="Confirm Password"
        name="confirmPassword"
        value="admin@test.com"
        required
      />
      <button type="button">Register</button>
      <p id="error" style="display:none;"></p>
    </form>
  </main>
</body>
<script>
  import Axios from "axios";
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.querySelector("form");
    form.querySelectorAll("input").forEach((input) => {
      input.addEventListener("change", () => {
        if (
          (input.type === "password" || input.name === "confirmPassword") &&
          input.value
        ) {
          const password = form.querySelector(
            'input[name="password"]'
          ) as HTMLInputElement;
          const confirmPassword = form.querySelector(
            'input[name="confirmPassword"]'
          ) as HTMLInputElement;
          if (password?.value !== confirmPassword?.value) {
            confirmPassword.setCustomValidity("Passwords do not match");
          } else {
            confirmPassword.setCustomValidity("");
          }
        } else {
          input.setCustomValidity("");
        }
      });
    });
    document.querySelector("button").addEventListener("click", async () => {
      const form = document.querySelector("form");
      if (form.checkValidity() === false) {
        form.reportValidity();
        return;
      }
      const formData = new FormData(form);
      const response = await Axios.post(form.action, formData);
      const data = response.data;
      if (!data || data.error) {
        if (data?.error?.field) {
          const errorField = document.querySelector(
            `[name="${data.error.field}"]`
          );
          const inputField = errorField as HTMLInputElement;
          inputField.setCustomValidity(data?.error?.message || "Invalid input");
          inputField.reportValidity();
          errorField.addEventListener("input", () => {
            inputField.setCustomValidity("");
            inputField?.removeEventListener("input", () => {});
          });
          return;
        }
        alert(
          data?.error?.message ||
            "An unexpected error has occurred, please retry later"
        );
        return;
      }
      alert("User registered successfully");
      window.location.href = "/login";
    });
  });
</script>
<style>
  main h1 {
    text-align: center;
  }
  form {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 10px;
  }
  label {
    font-weight: bold;
  }
  input {
    padding: 0.5rem;
    border-radius: 0.5rem;
    border: 1px solid #ccc;
  }
  button {
    padding: 0.5rem;
    border-radius: 0.5rem;
    border: 1px solid #ccc;
    background-color: #f0f0f0;
    grid-column-start: 1;
    grid-column-end: 3;
  }
  button:hover {
    background-color: #e0e0e0;
    cursor: pointer;
  }
</style>
